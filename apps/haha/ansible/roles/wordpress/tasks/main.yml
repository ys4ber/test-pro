---
- name: Create application directory
  file:
    path: "/home/{{ deploy_user }}/{{ app_name }}-{{ environment }}"
    state: directory
    owner: "{{ deploy_user }}"
    group: "{{ deploy_user }}"
    mode: '0755'

- name: Stop existing containers
  community.docker.docker_compose_v2:
    project_src: "/home/{{ deploy_user }}/{{ app_name }}-{{ environment }}"
    state: absent
  ignore_errors: yes

- name: Generate secure passwords
  set_fact:
    mysql_root_password: "{{ lookup('password', '/tmp/' + app_name + '_' + environment + '_mysql_root chars=ascii_letters,digits length=16') }}"
    mysql_password: "{{ lookup('password', '/tmp/' + app_name + '_' + environment + '_mysql_user chars=ascii_letters,digits length=16') }}"
    wp_admin_password: "{{ lookup('password', '/tmp/' + app_name + '_' + environment + '_wp_admin chars=ascii_letters,digits length=16') }}"

- name: Create .env file from template
  template:
    src: .env.j2
    dest: "/home/{{ deploy_user }}/{{ app_name }}-{{ environment }}/.env"
    owner: "{{ deploy_user }}"
    group: "{{ deploy_user }}"
    mode: '0600'

- name: Create docker-compose.yml from template
  template:
    src: docker-compose.yml.j2
    dest: "/home/{{ deploy_user }}/{{ app_name }}-{{ environment }}/docker-compose.yml"
    owner: "{{ deploy_user }}"
    group: "{{ deploy_user }}"
    mode: '0644'

- name: Create wp-content directories
  file:
    path: "/home/{{ deploy_user }}/{{ app_name }}-{{ environment }}/wp-content/{{ item }}"
    state: directory
    owner: "{{ deploy_user }}"
    group: "{{ deploy_user }}"
    mode: '0755'
  loop:
    - themes
    - uploads
    - plugins

- name: Start WordPress containers
  community.docker.docker_compose_v2:
    project_src: "/home/{{ deploy_user }}/{{ app_name }}-{{ environment }}"
    state: present
  become_user: "{{ deploy_user }}"

- name: Wait for WordPress to be ready
  wait_for:
    port: "{{ wordpress_port }}"
    host: "{{ server_ip }}"
    delay: 30
    timeout: 120

- name: Configure WordPress URLs
  shell: |
    docker compose exec -T wpcli wp option update home "{{ wp_url }}" --allow-root
    docker compose exec -T wpcli wp option update siteurl "{{ wp_url }}" --allow-root
  args:
    chdir: "/home/{{ deploy_user }}/{{ app_name }}-{{ environment }}"
  become_user: "{{ deploy_user }}"
  ignore_errors: yes
