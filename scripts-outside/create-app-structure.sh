#!/bin/bash
# Create WordPress app directory structure only (no file content)

APP_NAME="$1"

# Colors
RED='\033[0;31m'
GREEN='\033[0;32m'
BLUE='\033[0;34m'
NC='\033[0m'

print_status() { echo -e "${BLUE}[STRUCTURE]${NC} $1"; }
print_success() { echo -e "${GREEN}[SUCCESS]${NC} $1"; }
print_error() { echo -e "${RED}[ERROR]${NC} $1"; }

# Validation
if [ -z "$APP_NAME" ]; then
    print_error "Usage: $0 <app-name>"
    echo "Example: $0 ecommerce-site"
    exit 1
fi

SCRIPT_DIR="$(cd "$(dirname "${BASH_SOURCE[0]}")" && pwd)"
APPS_DIR="$SCRIPT_DIR/../apps"
APP_DIR="$APPS_DIR/$APP_NAME"

# Check if app already exists
if [ -d "$APP_DIR" ]; then
    print_error "App '$APP_NAME' already exists!"
    exit 1
fi

print_status "Creating WordPress app structure: $APP_NAME"

# Create main app directory structure
mkdir -p "$APP_DIR"/{wp-content,scripts}

# Create Ansible directory structure
mkdir -p "$APP_DIR/ansible/inventories"/{test,preprod,prod}/group_vars
mkdir -p "$APP_DIR/ansible/roles"/{wordpress,nginx,mysql}/{tasks,templates,vars,handlers}

print_status "📁 Creating directory structure..."

# Create all necessary files (empty)
touch "$APP_DIR/azure-pipelines.yml"
touch "$APP_DIR/docker-compose.yml"
touch "$APP_DIR/.env"
touch "$APP_DIR/plugins.txt"
touch "$APP_DIR/README.md"
touch "$APP_DIR/Makefile"

# Ansible files
touch "$APP_DIR/ansible/deploy.yml"

# Inventory files
touch "$APP_DIR/ansible/inventories/test/hosts"
touch "$APP_DIR/ansible/inventories/test/group_vars/all.yml"
touch "$APP_DIR/ansible/inventories/preprod/hosts"
touch "$APP_DIR/ansible/inventories/preprod/group_vars/all.yml"
touch "$APP_DIR/ansible/inventories/prod/hosts"
touch "$APP_DIR/ansible/inventories/prod/group_vars/all.yml"

# Role files for WordPress
touch "$APP_DIR/ansible/roles/wordpress/tasks/main.yml"
touch "$APP_DIR/ansible/roles/wordpress/templates/.env.j2"
touch "$APP_DIR/ansible/roles/wordpress/templates/docker-compose.yml.j2"
touch "$APP_DIR/ansible/roles/wordpress/vars/main.yml"
touch "$APP_DIR/ansible/roles/wordpress/handlers/main.yml"

# Role files for Nginx
touch "$APP_DIR/ansible/roles/nginx/tasks/main.yml"
touch "$APP_DIR/ansible/roles/nginx/templates/nginx.conf.j2"

# Role files for MySQL
touch "$APP_DIR/ansible/roles/mysql/tasks/main.yml"
touch "$APP_DIR/ansible/roles/mysql/templates/mysql.cnf.j2"

# Script files (empty - will be populated from templates)
touch "$APP_DIR/scripts/deploy-app.sh"
touch "$APP_DIR/scripts/health-check.sh"
touch "$APP_DIR/scripts/install-plugins.sh"
touch "$APP_DIR/scripts/backup-app.sh"

# Make script files executable
chmod +x "$APP_DIR/scripts"/*.sh

print_status "📋 Created file structure for $APP_NAME"

# Create a basic file list for reference
cat > "$APP_DIR/FILE_STRUCTURE.md" << EOF
# $APP_NAME File Structure

## Main Files
- azure-pipelines.yml
- docker-compose.yml (empty - use generate-docker-compose.sh)
- .env (empty - use generate-env.sh)
- plugins.txt
- README.md
- Makefile

## Ansible Structure
- ansible/deploy.yml
- ansible/inventories/test/hosts
- ansible/inventories/test/group_vars/all.yml
- ansible/inventories/preprod/hosts
- ansible/inventories/preprod/group_vars/all.yml
- ansible/inventories/prod/hosts
- ansible/inventories/prod/group_vars/all.yml

## Ansible Roles
### WordPress Role
- ansible/roles/wordpress/tasks/main.yml
- ansible/roles/wordpress/templates/.env.j2
- ansible/roles/wordpress/templates/docker-compose.yml.j2
- ansible/roles/wordpress/vars/main.yml
- ansible/roles/wordpress/handlers/main.yml

### Nginx Role
- ansible/roles/nginx/tasks/main.yml
- ansible/roles/nginx/templates/nginx.conf.j2

### MySQL Role
- ansible/roles/mysql/tasks/main.yml
- ansible/roles/mysql/templates/mysql.cnf.j2

## Scripts
- scripts/deploy-app.sh
- scripts/health-check.sh
- scripts/install-plugins.sh
- scripts/backup-app.sh

## Content Directories
- wp-content/ (for WordPress files)

## Generated by Template Scripts
Use these scripts to populate the empty files:
- generate-env.sh $APP_NAME <port>
- generate-nginx.sh $APP_NAME <port>
- generate-docker-compose.sh $APP_NAME <port>

App Name: $APP_NAME
Created: $(date)
EOF

print_success "✅ WordPress app structure '$APP_NAME' created successfully!"

echo ""
echo "📋 Created Structure:"
echo "  📁 Location: $APP_DIR"
echo "  📄 Files: $(find "$APP_DIR" -type f | wc -l) files created"
echo "  📂 Directories: $(find "$APP_DIR" -type d | wc -l) directories created"
echo ""
echo "📋 Next Steps:"
echo "  1. cd scripts-outside"
echo "  2. ./generate-env.sh $APP_NAME <port-number>"
echo "  3. ./generate-nginx.sh $APP_NAME <port-number>"
echo "  4. ./generate-docker-compose.sh $APP_NAME <port-number>"
echo ""
echo "💡 Example:"
echo "  ./generate-env.sh $APP_NAME 5000"
echo "  ./generate-nginx.sh $APP_NAME 5000"
echo "  ./generate-docker-compose.sh $APP_NAME 5000"
echo ""